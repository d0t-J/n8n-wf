{
  "active": false,
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Classifier Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Classifier Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Client Inquiry": {
      "main": [
        [
          {
            "node": "Add label to message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Support": {
      "main": [
        [
          {
            "node": "Add label to message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Meeting Request": {
      "main": [
        [
          {
            "node": "Add label to message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow Up Email": {
      "main": [
        [
          {
            "node": "Add label to message3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Meeting Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Inquiry Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Inquiry Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Support Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Support Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Follow Up Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "Follow Up Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Inquiry Agent": {
      "main": [
        [
          {
            "node": "Draft1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Meeting Agent": {
      "main": [
        [
          {
            "node": "Draft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Support Agent": {
      "main": [
        [
          {
            "node": "Draft2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow Up Agent": {
      "main": [
        [
          {
            "node": "Draft4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classifier Agent": {
      "main": [
        [
          {
            "node": "Support",
            "type": "main",
            "index": 0
          },
          {
            "node": "Meeting Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Client Inquiry",
            "type": "main",
            "index": 0
          },
          {
            "node": "Follow Up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add label to message": {
      "main": [
        [
          {
            "node": "Support Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add label to message1": {
      "main": [
        [
          {
            "node": "Meeting Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add label to message2": {
      "main": [
        [
          {
            "node": "Inquiry Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add label to message3": {
      "main": [
        [
          {
            "node": "Follow Up Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-15T12:13:43.436Z",
  "id": "rLr8RJZLWvSDzJkH",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Collaborative AI Agents For Email Management**",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyHour"
            }
          ]
        },
        "simple": false,
        "filters": {},
        "options": {
          "dataPropertyAttachmentsPrefixName": "attachment_",
          "downloadAttachments": true
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -1184,
        512
      ],
      "id": "dd7c17fe-8ee7-4459-9da9-0daf1afc6b6a",
      "name": "Gmail Trigger"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1008,
        752
      ],
      "id": "399dccec-38b2-4f08-9046-f92c8e12b615",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "22f7977e-ba72-4971-b0c7-b68a3f5676ed",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Meeting Request",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69c9b5b5-d3bd-46fd-a029-7154ef36c8bc",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -544,
        432
      ],
      "id": "802901aa-ac80-4660-a37f-7dd244f9e82b",
      "name": "Meeting Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "22f7977e-ba72-4971-b0c7-b68a3f5676ed",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Follow Up Email",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69c9b5b5-d3bd-46fd-a029-7154ef36c8bc",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -544,
        832
      ],
      "id": "269aac2c-1ad7-432c-860c-cdc5a1cf830f",
      "name": "Follow Up Email"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "22f7977e-ba72-4971-b0c7-b68a3f5676ed",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Client Inquiry",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69c9b5b5-d3bd-46fd-a029-7154ef36c8bc",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -544,
        640
      ],
      "id": "80df9ffc-3280-425f-8452-a5b69ca4328a",
      "name": "Client Inquiry"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "22f7977e-ba72-4971-b0c7-b68a3f5676ed",
              "leftValue": "={{ $json.output }}",
              "rightValue": "Complaint or Issue Report",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "69c9b5b5-d3bd-46fd-a029-7154ef36c8bc",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -544,
        240
      ],
      "id": "12d798e2-1fc4-4603-8275-6b1eb845c336",
      "name": "Support"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        144,
        560
      ],
      "id": "5cec3e12-68ba-4b05-9b0d-6b2b19b85490",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "roberto@lunivate.com",
          "mode": "list",
          "cachedResultName": "roberto@lunivate.com"
        },
        "timeMin": "2025-02-09T19:10:09",
        "timeMax": "2025-02-09T19:10:12",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        272,
        576
      ],
      "id": "cdc2f9ea-0b1f-4fc9-b411-e417c789f703",
      "name": "Get Events"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"subject\": {\n      \"type\": \"string\",\n      \"description\": \"The subject line of the email\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"The body content of the email\"\n    }\n  },\n  \"required\": [\"subject\", \"email\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        416,
        576
      ],
      "id": "804d80ce-6097-4857-a2a7-ad61834d10e0",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $json.output.subject }}",
        "message": "={{ $json.output.email }}",
        "options": {
          "sendTo": "={{ $('Gmail Trigger').item.json.headers.to }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        576,
        432
      ],
      "id": "8833167d-8503-49ac-96e2-8b5cffb6c928",
      "name": "Draft",
      "webhookId": "83b76aa5-e0dc-48a8-b0fe-383e23d22403"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        800,
        944
      ],
      "id": "1353e4cd-3808-4fd1-8836-8e399abda79f",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"subject\": {\n      \"type\": \"string\",\n      \"description\": \"The subject line of the email\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"The body content of the email\"\n    }\n  },\n  \"required\": [\"subject\", \"email\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1040,
        912
      ],
      "id": "fe2ffe0b-778e-4682-8149-7ddec50037e8",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $json.output.subject }}",
        "message": "={{ $json.output.email }}",
        "options": {
          "sendTo": "={{ $('Gmail Trigger').item.json.headers.to }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1312,
        752
      ],
      "id": "e0b55060-1b36-489f-9c43-9ca790c9d136",
      "name": "Draft1",
      "webhookId": "37bd9465-a165-4088-8a4c-ff5880287269"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        800,
        400
      ],
      "id": "e2674dd8-d9cd-45a1-a7b8-a99c50b3d6cf",
      "name": "OpenAI Chat Model3"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"subject\": {\n      \"type\": \"string\",\n      \"description\": \"The subject line of the email\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"The body content of the email\"\n    }\n  },\n  \"required\": [\"subject\", \"email\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1024,
        416
      ],
      "id": "ae9a43b6-b5b9-456c-ba6f-1d23e264ba26",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $json.output.subject }}",
        "message": "={{ $json.output.email }}",
        "options": {
          "sendTo": "={{ $('Gmail Trigger').item.json.headers.to }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1264,
        256
      ],
      "id": "f1ea392f-1f45-47dc-8dae-bc1d5b249cfd",
      "name": "Draft2",
      "webhookId": "5d064291-24c1-4e8d-ba50-ec0ed3733504"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -16,
        1200
      ],
      "id": "2cbf8f15-32d0-493d-bd63-f404f7408148",
      "name": "OpenAI Chat Model5"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"subject\": {\n      \"type\": \"string\",\n      \"description\": \"The subject line of the email\"\n    },\n    \"email\": {\n      \"type\": \"string\",\n      \"description\": \"The body content of the email\"\n    }\n  },\n  \"required\": [\"subject\", \"email\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        176,
        1200
      ],
      "id": "8b9c3a27-d9e2-4c8c-a334-faa559db6c31",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $json.output.subject }}",
        "message": "={{ $json.output.email }}",
        "options": {
          "sendTo": "={{ $('Gmail Trigger').item.json.headers.to }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        464,
        1024
      ],
      "id": "7f711020-6a77-43ec-aba2-2d556db31534",
      "name": "Draft4",
      "webhookId": "dff1cbd6-e041-48a8-b90b-d96113600bec"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role & Objective:\nYou are an AI-powered email assistant specializing in crafting structured, professional, and personalized responses to client inquiries. Your task is to generate well-formatted replies based on the provided email content.\n\nInput Details:\nEmail Content: {{ $('Gmail Trigger').item.json.text }}\nEmail Date: {{ $('Gmail Trigger').item.json.headers.date }}\nCurrent Date/Time: {{ $now }}\nResponse Output Format:\nYour response must be formatted in JSON, containing:\n\n\"subject\" – A clear, relevant subject line.\n\"email_body\" – A well-structured, professional email response.\nGuidelines for Generating Responses:\nIf the client requests product details, provide an overview and mention any relevant attachments (e.g., brochure, pricing sheet).\nIf the client asks about service availability, confirm whether the service is available and outline next steps (e.g., scheduling a demo).\nIf the inquiry lacks details, request clarification while sharing general information.\nIf the client requests a meeting but no automated scheduling system is available, manually suggest time slots.\nExample Responses in JSON Format:\n1. Client Requests Pricing Information\nScenario:\nThe client is inquiring about pricing for a specific product or service.\n\nJSON Output:\n{\n  \"subject\": \"Re: Pricing Information for [Product/Service]\",\n  \"email_body\": \"Dear [Sender’s Name],\\n\\nThank you for reaching out! We appreciate your interest in [Product/Service Name]. Here’s an overview of our pricing options:\\n\\nBasic Plan: $XX/month – [Feature 1], [Feature 2]\\nPro Plan: $XX/month – [Feature 1], [Feature 2], [Feature 3]\\nEnterprise Plan: Custom pricing – Contact us for a tailored solution.\\n\\nIf you'd like to explore which option suits you best, we’d be happy to schedule a call. Let us know your availability!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n2. Client Inquires About Service Availability & Requests a Demo (No Calendar Access)\nScenario:\nThe client is asking whether a service is available and wants to schedule a demo, but an automated scheduling tool is not accessible.\n\nJSON Output:\n\n{\n  \"subject\": \"Re: Availability & Demo for [Service Name]\",\n  \"email_body\": \"Dear [Sender’s Name],\\n\\nThank you for your interest in [Service Name]! We’re pleased to confirm that our service is available in your region.\\n\\nWe’d love to walk you through the details with a live demo. Here are some available time slots:\\n\\n- Tuesday, 11:00 AM – 1:00 PM\\n- Thursday, 3:00 PM – 5:00 PM\\n\\nPlease confirm which time works for you, or feel free to suggest an alternative.\\n\\nLooking forward to connecting!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n3. Client Inquires About Service Availability & Requests a Demo (With Calendar Access)\nScenario:\nThe client is asking about service availability and would like to schedule a demo. The user has access to an automated scheduling system.\n\nJSON Output:\n\n{\n  \"subject\": \"Re: Availability & Demo for [Service Name]\",\n  \"email_body\": \"Dear [Sender’s Name],\\n\\nThank you for your interest in [Service Name]! We’re happy to confirm that our service is available in your region.\\n\\nTo schedule a demo at your convenience, please use the following link: [Insert Scheduling Link].\\n\\nAlternatively, if you prefer, here are some available time slots:\\n\\n- Tuesday, 11:00 AM – 1:00 PM\\n- Thursday, 3:00 PM – 5:00 PM\\n\\nLet us know what works best for you.\\n\\nLooking forward to connecting!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        880,
        704
      ],
      "id": "72782909-b8a2-453d-845c-cb0dec3cd9b2",
      "name": "Inquiry Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role & Objective:\nYou are an AI-powered meeting coordinator responsible for processing meeting requests, suggesting available time slots, and scheduling events. Your responses should be structured, professional, and easy for recipients to confirm.\n\nInput Details:\nDate of Email: {{ $('Gmail Trigger').item.json.headers.date }}\nCurrent Date/Time: {{ $now }}\nResponse Format:\nYour response must be structured in JSON, containing:\n\n\"subject\" – A clear subject line.\n\"email_body\" – A well-organized and professional email response.\nAction Steps:\nIdentify the requested meeting date, time, and purpose from the email.\nSuggest available time slots for the meeting.\nProvide a scheduling link if applicable.\nEnsure the response is polite, professional, and easy to confirm.\nCalendar Management Responsibilities:\nUse \"Get Events\" to retrieve the user's schedule when needed.\nUse \"Delete Event\" to cancel a scheduled event (must first retrieve the event ID using \"Get Events\").\nIf no duration is specified for a meeting, assume one hour by default.\n\nExample Responses in JSON Format:\n1. Meeting Request with Available Time Slots\nScenario:\nThe sender is requesting a meeting, and you are suggesting available slots.\n\nJSON Output:\n{\n  \"subject\": \"Re: Scheduling a Meeting\",\n  \"email_body\": \"Dear [Sender’s Name],\\n\\nThank you for reaching out! Based on your request, here are my available time slots:\\n\\n- Tuesday, 11:00 AM – 1:00 PM\\n- Thursday, 3:00 PM – 5:00 PM\\n\\nPlease confirm which time works best for you, or feel free to suggest an alternative. You can also schedule directly using my calendar here: [Insert Calendar Link].\\n\\nLooking forward to our conversation!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n\n2. Meeting Confirmation with Calendar Event Created\nScenario:\nThe recipient has selected a time slot, and you confirm the scheduled meeting.\n\nJSON Output:\n{\n  \"subject\": \"Re: Meeting Confirmation for [Date & Time]\",\n  \"email_body\": \"Dear [Sender’s Name],\\n\\nThank you for confirming! Our meeting is scheduled for [Confirmed Date & Time]. Below are the details:\\n\\n- **Date:** [Confirmed Date]\\n- **Time:** [Confirmed Time]\\n- **Duration:** 1 hour\\n- **Meeting Link:** [Insert Meeting Link]\\n\\nYou will receive a calendar invite shortly. If you need to reschedule, feel free to let me know or use this link: [Insert Rescheduling Link].\\n\\nLooking forward to speaking with you!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n\n3. Meeting Rescheduling Request\nScenario:\nThe sender requests a reschedule, and you offer new time slots.\n\nJSON Output:\n{\n  \"subject\": \"Re: Rescheduling Your Meeting\",\n  \"email_body\": \"Dear [Sender’s Name],\\n\\nI understand that schedules can change! Here are some alternative time slots for rescheduling:\\n\\n- Wednesday, 2:00 PM – 4:00 PM\\n- Friday, 10:00 AM – 12:00 PM\\n\\nPlease let me know which option works for you, or feel free to suggest another time. You can also reschedule using this link: [Insert Rescheduling Link].\\n\\nLooking forward to our meeting!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        144,
        400
      ],
      "id": "a6ed0acb-f331-4773-acd9-28bc55891d77",
      "name": "Meeting Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role & Objective:\nYou are an AI-powered email responder specializing in handling customer support requests, including complaints, issue reports, and general inquiries. Your goal is to provide professional, well-structured, and solution-oriented responses.\n\nReplying on Behalf of:\nAgent Name: Damian Danelczyk\nCompany: Lunivate\nInput Details:\nEmail Content: {{ $('Gmail Trigger').item.json.text }}\nEmail Date: {{ $('Gmail Trigger').item.json.headers.date }}\nCurrent Date/Time: {{ $now }}\nResponse Format:\nYour response must be formatted in JSON, containing:\n\n\"subject\" – A clear, relevant subject line.\n\"email_body\" – A professional, structured email response.\nGuidelines for Handling Support Requests:\nTechnical Issues: Acknowledge the problem, suggest troubleshooting steps, and escalate if necessary.\nRefund/Compensation Requests: Follow company policy, outline eligibility criteria, and explain the next steps.\nIssues Requiring Investigation: Provide a case/reference number, inform the customer of the expected response time, and assure them of updates.\nGeneral Support Questions: Deliver a clear and helpful response while offering further assistance.\nTone: Maintain politeness, empathy, and a proactive approach to problem-solving.\n\nExample Responses in JSON Format:\n1. Customer Reporting a Technical Issue\nScenario:\nThe customer is experiencing a software error and needs troubleshooting assistance.\n\nJSON Output:\n{\n  \"subject\": \"Re: Technical Issue - Assistance Required\",\n  \"email_body\": \"Dear [Customer’s Name],\\n\\nThank you for reaching out. We’re sorry to hear that you’re experiencing issues with [Product/Service Name]. Based on your description, here are a few troubleshooting steps you can try:\\n\\n1. Restart the application and check if the issue persists.\\n2. Clear your cache and cookies if using a web-based service.\\n3. Ensure you’re using the latest version of the software.\\n\\nIf the issue continues, please provide the following details to help us investigate further:\\n\\n- Your device and operating system\\n- A screenshot of the error message\\n- Steps taken before the issue occurred\\n\\nYour case reference number is [Case #]. Our team is actively working on this, and we will provide an update within [Expected Resolution Time].\\n\\nWe appreciate your patience and look forward to resolving this for you!\\n\\nBest regards,\\n[Your Name]\\nLunivate Support Team\\n[Support Contact Info]\"\n}\n\n2. Customer Requesting a Refund\nScenario:\nThe customer is dissatisfied with a product or service and wants a refund.\n\nJSON Output:\n{\n  \"subject\": \"Re: Refund Request - [Order Number]\",\n  \"email_body\": \"Dear [Customer’s Name],\\n\\nWe’re sorry to hear that [Product/Service Name] did not meet your expectations. We understand how important this is and are here to assist.\\n\\nAs per our refund policy, refunds are processed within [Timeframe] if the request meets the following conditions:\\n\\n- The product was purchased within the last [Eligible Refund Period].\\n- The issue falls under our satisfaction guarantee.\\n- The request aligns with the terms outlined in our return/refund policy.\\n\\nTo proceed, please provide the following details:\\n\\n- Your order number: [Order #]\\n- Reason for the refund request\\n- Any supporting documentation (e.g., receipt, screenshots, issue details)\\n\\nOnce we receive this information, our team will review your request and confirm the next steps. If you need further assistance, please don’t hesitate to reach out.\\n\\nBest regards,\\n[Your Name]\\nLunivate Support Team\\n[Support Contact Info]\"\n}\n\n3. Customer Asking for General Support\nScenario:\nThe customer is requesting assistance with using a feature.\n\nJSON Output:\n{\n  \"subject\": \"Re: Assistance with [Feature/Service]\",\n  \"email_body\": \"Dear [Customer’s Name],\\n\\nThank you for reaching out! We’re happy to assist you with using [Feature Name] in [Product/Service Name].\\n\\nHere’s a step-by-step guide to help you get started:\\n\\n1. Navigate to [Location in the App/Website].\\n2. Click on [Feature Name] and select your desired option.\\n3. Follow the on-screen instructions to complete the process.\\n\\nFor a more detailed walkthrough, you can refer to our help center article here: [Insert Help Article Link].\\n\\nIf you need further assistance, feel free to reach out, and we’d be happy to help!\\n\\nBest regards,\\n[Your Name]\\nLunivate Support Team\\n[Support Contact Info]\"\n}\n\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        832,
        224
      ],
      "id": "dc261bfa-26ea-4662-8fc5-1496507502da",
      "name": "Support Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role & Objective:\nYou are an AI-powered assistant specializing in follow-up emails, handling delayed responses, unanswered messages, and re-engagement efforts professionally and efficiently. Your task is to generate structured, personalized, and professional follow-up emails based on the context of the original email.\n\nInput Details:\nEmail Content: {{ $('Gmail Trigger').item.json.text }}\nEmail Date: {{ $('Gmail Trigger').item.json.headers.date }}\nCurrent Date/Time: {{ $now }}\nResponse Format:\nYour response must be structured in JSON, containing:\n\n\"subject\" – A concise and relevant subject line.\n\"email_body\" – A well-organized and professional email response.\nGuidelines for Follow-Up Emails:\nBusiness Proposals/Offers: Politely remind the recipient about the previous email and ask if they need any clarification.\nMeeting Requests: Follow up to confirm availability or suggest alternative time slots.\nSupport Requests: Check if the issue has been resolved and offer additional assistance if needed.\nSignificant Delays in Follow-Up: Acknowledge the time gap professionally and re-engage in a way that encourages a response.\nTone: Maintain a polite, professional, and non-pushy approach while encouraging action.\nExample Responses in JSON Format:\n1. Follow-Up on a Business Proposal\nScenario:\nThe sender previously sent a proposal, but the recipient has not responded.\n\nJSON Output:\n{\n  \"subject\": \"Re: Following Up on Our Proposal\",\n  \"email_body\": \"Dear [Recipient’s Name],\\n\\nI hope you're doing well! I wanted to follow up on my previous email regarding our proposal for [Project Name]. Please let me know if you need any additional details or if we can schedule a time to discuss further.\\n\\nLooking forward to your response.\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n\n2. Follow-Up on a Meeting Request\nScenario:\nThe sender previously requested a meeting but has not received a confirmation.\n\nJSON Output:\n{\n  \"subject\": \"Re: Checking in on Meeting Availability\",\n  \"email_body\": \"Dear [Recipient’s Name],\\n\\nI wanted to check in on my previous email regarding our meeting request for [Meeting Topic]. If you're still interested, here are my available time slots:\\n\\n- Monday, 10:00 AM – 12:00 PM\\n- Wednesday, 3:00 PM – 5:00 PM\\n\\nPlease let me know if one of these times works for you, or feel free to suggest an alternative. Looking forward to your response!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n\n3. Follow-Up on a Support Request\nScenario:\nA customer submitted a support request but has not responded to a previous resolution or troubleshooting email.\n\nJSON Output:\n{\n  \"subject\": \"Re: Checking in on Your Support Request\",\n  \"email_body\": \"Dear [Customer’s Name],\\n\\nI wanted to follow up on your support request regarding [Issue Topic]. We previously provided a potential solution, and I’d like to check if the issue has been resolved or if you need any further assistance.\\n\\nIf the issue persists, please let us know so we can investigate further and ensure everything is working properly for you.\\n\\nLooking forward to your update!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\\n[Support Contact Info]\"\n}\n\n\n4. Follow-Up on a Cold Email or Networking Attempt\nScenario:\nThe sender reached out for networking or business collaboration, but the recipient has not responded.\n\nJSON Output:\n{\n  \"subject\": \"Re: Just Following Up – Looking Forward to Connecting\",\n  \"email_body\": \"Dear [Recipient’s Name],\\n\\nI hope you're doing well! I wanted to follow up on my last message regarding [Networking/Collaboration Topic]. I’d still love the opportunity to connect and explore how we can work together.\\n\\nPlease let me know if you’re available for a quick call, or if there’s a better time to reach out. Looking forward to hearing from you!\\n\\nBest regards,\\n[Your Name]\\n[Company Name]\"\n}\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        32,
        896
      ],
      "id": "dd74ad66-dc35-40e7-b553-293ad34eb245",
      "name": "Follow Up Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=AI Email Classification Assistant\n\nTask Overview:\nYou are an AI assistant designed to categorize emails for streamlined processing.\n\nObjective:\nYour role is to analyze the content of each email and classify it into one of the following categories:\n\nFollow-Up Email – The sender is referencing a previous email and checking for updates.\nClient Inquiry – A prospective or existing client is requesting details about a product or service.\nSupport – A customer or team member is reporting an issue or requesting technical assistance.\nMeeting Request – The sender is asking to schedule a meeting or call.\nIntroduction Email – Someone is introducing themselves or another person.\nInstructions:\nCarefully examine the email text, identify key indicators, and determine the appropriate category.\n\nOutput Format:\nProvide only the category name, without any additional context or explanation.\n\nExample Output:\nClient Inquiry\n\nEmail:{{ $json.text }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -976,
        512
      ],
      "id": "87ee9aea-4bfc-4afc-a478-7b77c803f8a0",
      "name": "Classifier Agent"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "labelIds": [
          "Label_5416414822481671773"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -176,
        224
      ],
      "id": "8b9379b2-8d1d-4d20-a9eb-aa517ad394cf",
      "name": "Add label to message",
      "webhookId": "2b2d4b2d-cefd-4d6f-99b0-57e467db5272"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "labelIds": [
          "Label_269397949618707096"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -176,
        432
      ],
      "id": "3a9399d2-b9c6-4a62-8401-8c01b99b4791",
      "name": "Add label to message1",
      "webhookId": "5234394a-bb95-46af-9dd6-2af8fb08ee1c"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "labelIds": [
          "Label_5416414822481671773"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -176,
        672
      ],
      "id": "8694e64b-709a-4227-8075-9fae177c6e7c",
      "name": "Add label to message2",
      "webhookId": "2bf69557-c8f6-404d-9ae9-4bf91e995eb3"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "labelIds": [
          "Label_5416414822481671773"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -176,
        896
      ],
      "id": "517e6487-4366-4c45-afd1-2b67b5225dbc",
      "name": "Add label to message3",
      "webhookId": "54b1dc1e-eb86-496f-b599-069d0bc467b2"
    },
    {
      "parameters": {
        "content": "## Filer As Per Context",
        "height": 980,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -624,
        112
      ],
      "id": "b499285a-00c2-414f-929b-8c5713225160",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-15T12:13:43.441Z",
      "updatedAt": "2025-09-15T12:13:43.441Z",
      "role": "workflow:owner",
      "workflowId": "rLr8RJZLWvSDzJkH",
      "projectId": "2lFcYqGDoW8pSvlN"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-15T12:15:00.000Z",
  "versionId": "d1ce2e38-837d-4813-a8fc-3774b2f99b10"
}